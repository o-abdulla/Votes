{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VoteService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  castVote(id) {\n    return this.http.put(`${this.baseUrl}votes/addVote?id=${id}`, {});\n  }\n  getVotes() {\n    return this.http.get(`${this.baseUrl}votes/getVotes`);\n  }\n  addRecipe(recipe) {\n    return this.http.post(`${this.baseUrl}votes/addRecipe`, {\n      recipe\n    });\n  }\n}\nVoteService.ɵfac = function VoteService_Factory(t) {\n  return new (t || VoteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nVoteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VoteService,\n  factory: VoteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe,EAA8BC,OAAe;IAA5D,SAAI,GAAJD,IAAI;IAAyC,YAAO,GAAPC,OAAO;EAAY;EAEpFC,QAAQ,CAACC,EAAS;IAChB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAO,GAAG,IAAI,CAACH,OAAO,oBAAoBE,EAAE,EAAE,EAAE,EAAE,CAAC;EACzE;EAEAE,QAAQ;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,OAAO,gBAAgB,CAAC;EAC/D;EAEAM,SAAS,CAACC,MAAW;IACnB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,GAAG,IAAI,CAACR,OAAO,iBAAiB,EAAE;MAACO;IAAM,CAAC,CAAC;EACzE;;AAdWV,WAAW;mBAAXA,WAAW,0CAEuB,UAAU;AAAA;AAF5CA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["VoteService","constructor","http","baseUrl","castVote","id","put","getVotes","get","addRecipe","recipe","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\osabd\\source\\repos\\Votes\\Votes\\ClientApp\\src\\app\\services\\vote.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Vote } from '../models/vote';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoteService {\n\n  constructor(private http:HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\n\n  castVote(id:number):Observable<Vote>{\n    return this.http.put<Vote>(`${this.baseUrl}votes/addVote?id=${id}`, {});\n  }\n\n  getVotes():Observable<Vote[]>{\n    return this.http.get<Vote[]>(`${this.baseUrl}votes/getVotes`);\n  }\n\n  addRecipe(recipe:Vote):Observable<Vote>{\n    return this.http.post<Vote>(`${this.baseUrl}votes/addRecipe`, {recipe});\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}